
&НаКлиенте
Процедура КнопкаВыполнить(Команда)
	КонецПорции = 1000;
	ОчиститьЗапасы(КонецПорции);
	ОчиститьЗапасыНаСкладах(КонецПорции);
	ОчиститьЗапасыКПоступлениюНаСклады(КонецПорции);
	ОчиститьЗапасыКРасходуСоСкладов(КонецПорции);  
КонецПроцедуры

&НаСервере
Процедура ОчиститьЗапасыНаСкладах(КонецПорции = 1000)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапасыНаСкладахОстаткиИОбороты.Организация КАК Организация,
		|	ЗапасыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ЗапасыНаСкладахОстаткиИОбороты.Характеристика КАК Характеристика,
		|	ЗапасыНаСкладахОстаткиИОбороты.Партия КАК Партия,
		|	ЗапасыНаСкладахОстаткиИОбороты.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ЗапасыНаСкладахОстаткиИОбороты.Ячейка КАК Ячейка,
		|	ЗапасыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ЗапасыНаСкладах.ОстаткиИОбороты(, &КонГраница, , , СтруктурнаяЕдиница = &Склад) КАК ЗапасыНаСкладахОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("КонГраница",  
			Новый Граница(КонецДня(Объект.Регистратор.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	
	НаборЗаписей = РегистрыНакопления.ЗапасыНаСкладах.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Объект.Регистратор);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Сч = 0;
	СчетчикКоличестваСтрок = 0;

	
	Пока Выборка.Следующий() Цикл
		  		
		   НоваяСтрока = НаборЗаписей.ДобавитьРасход();
			 
			 ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			 НоваяСтрока.Регистратор = Объект.Регистратор;
			 НоваяСтрока.Период = Объект.Регистратор.Дата;
			 
			 СчетчикКоличестваСтрок = СчетчикКоличестваСтрок + 1;
			 Сч = Сч + 1;
			 
			 Если Сч >= КонецПорции Тогда 
				 НаборЗаписей.Записать(Ложь);
				 НаборЗаписей.Очистить();
				 
				 Сч = 0;
				КонецЕсли;
			 
	КонецЦикла;
	
	НаборЗаписей.Записать(Ложь);
	Сообщить("Регистр ЗапасыНаСкладах очищен! Количество записей = " + СчетчикКоличестваСтрок);

КонецПроцедуры

&НаСервере
Процедура ОчиститьЗапасы(КонецПорции = 1000)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапасыОстаткиИОбороты.Организация КАК Организация,
		|	ЗапасыОстаткиИОбороты.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ЗапасыОстаткиИОбороты.СчетУчета КАК СчетУчета,
		|	ЗапасыОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ЗапасыОстаткиИОбороты.Характеристика КАК Характеристика,
		|	ЗапасыОстаткиИОбороты.Партия КАК Партия,
		|	ЗапасыОстаткиИОбороты.ЗаказПокупателя КАК ЗаказПокупателя,
		|	ЗапасыОстаткиИОбороты.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	ЗапасыОстаткиИОбороты.КоличествоКонечныйОстаток КАК Количество,
		|	ЗапасыОстаткиИОбороты.СуммаКонечныйОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.Запасы.ОстаткиИОбороты(, &КонГраница, , , СтруктурнаяЕдиница = &Склад) КАК ЗапасыОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("КонГраница",  
			Новый Граница(КонецДня(Объект.Регистратор.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	
	НаборЗаписей = РегистрыНакопления.Запасы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Объект.Регистратор);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Сч = 0;
	СчетчикКоличестваСтрок = 0;
	
	Пока Выборка.Следующий() Цикл
		  		
		   НоваяСтрока = НаборЗаписей.ДобавитьРасход();
			 
			 ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			 НоваяСтрока.Регистратор = Объект.Регистратор;
			 НоваяСтрока.Период = Объект.Регистратор.Дата;
			 
			 СчетчикКоличестваСтрок = СчетчикКоличестваСтрок + 1;
			 Сч = Сч + 1;
			 
			 Если Сч >= КонецПорции Тогда 
				 НаборЗаписей.Записать(Ложь);
				 НаборЗаписей.Очистить();
				 
				 Сч = 0;
				КонецЕсли;
			 
	КонецЦикла;
	
	НаборЗаписей.Записать(Ложь);
	Сообщить("Регистр Запасы очищен! Количество записей = " + СчетчикКоличестваСтрок);

КонецПроцедуры

&НаСервере
Процедура ОчиститьЗапасыКПоступлениюНаСклады(КонецПорции = 1000)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапасыКПоступлениюНаСкладыОстаткиИОбороты.Организация КАК Организация,
		|	ЗапасыКПоступлениюНаСкладыОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ЗапасыКПоступлениюНаСкладыОстаткиИОбороты.Характеристика КАК Характеристика,
		|	ЗапасыКПоступлениюНаСкладыОстаткиИОбороты.Партия КАК Партия,
		|	ЗапасыКПоступлениюНаСкладыОстаткиИОбороты.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ЗапасыКПоступлениюНаСкладыОстаткиИОбороты.КоличествоКонечныйОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ЗапасыКПоступлениюНаСклады.ОстаткиИОбороты(, &КонГраница, , , СтруктурнаяЕдиница = &Склад) КАК ЗапасыКПоступлениюНаСкладыОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("КонГраница",  
			Новый Граница(КонецДня(Объект.Регистратор.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	
	НаборЗаписей = РегистрыНакопления.ЗапасыКПоступлениюНаСклады.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Объект.Регистратор);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Сч = 0;
	СчетчикКоличестваСтрок = 0;
	
	Пока Выборка.Следующий() Цикл
		  		
		   НоваяСтрока = НаборЗаписей.ДобавитьРасход();
			 
			 ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			 НоваяСтрока.Регистратор = Объект.Регистратор;
			 НоваяСтрока.Период = Объект.Регистратор.Дата;
			 
			 СчетчикКоличестваСтрок = СчетчикКоличестваСтрок + 1;
			 Сч = Сч + 1;
			 
			 Если Сч >= КонецПорции Тогда 
				 НаборЗаписей.Записать(Ложь);
				 НаборЗаписей.Очистить();
				 
				 Сч = 0;
				КонецЕсли;
			 
	КонецЦикла;
	
	НаборЗаписей.Записать(Ложь);
	Сообщить("Регистр ЗапасыКПоступлениюНаСклады очищен! Количество записей = " + СчетчикКоличестваСтрок);

КонецПроцедуры

&НаСервере
Процедура ОчиститьЗапасыКРасходуСоСкладов(КонецПорции = 1000)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапасыКРасходуСоСкладовОстаткиИОбороты.Организация КАК Организация,
		|	ЗапасыКРасходуСоСкладовОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ЗапасыКРасходуСоСкладовОстаткиИОбороты.Характеристика КАК Характеристика,
		|	ЗапасыКРасходуСоСкладовОстаткиИОбороты.Партия КАК Партия,
		|	ЗапасыКРасходуСоСкладовОстаткиИОбороты.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ЗапасыКРасходуСоСкладовОстаткиИОбороты.КоличествоКонечныйОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ЗапасыКРасходуСоСкладов.ОстаткиИОбороты(, &КонГраница, , , СтруктурнаяЕдиница = &Склад) КАК ЗапасыКРасходуСоСкладовОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("КонГраница",  
			Новый Граница(КонецДня(Объект.Регистратор.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	
	НаборЗаписей = РегистрыНакопления.ЗапасыКРасходуСоСкладов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Объект.Регистратор);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Сч = 0;
	СчетчикКоличестваСтрок = 0;

	
	Пока Выборка.Следующий() Цикл
		  		
		   НоваяСтрока = НаборЗаписей.ДобавитьРасход();
			 
			 ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			 НоваяСтрока.Регистратор = Объект.Регистратор;
			 НоваяСтрока.Период = Объект.Регистратор.Дата;
			 
			 СчетчикКоличестваСтрок = СчетчикКоличестваСтрок + 1;
			 Сч = Сч + 1;
			 
			 Если Сч >= КонецПорции Тогда 
				 НаборЗаписей.Записать(Ложь);
				 НаборЗаписей.Очистить();
				 
				 Сч = 0;
				КонецЕсли;
			 
	КонецЦикла;
	
	НаборЗаписей.Записать(Ложь);
	Сообщить("Регистр ЗапасыКРасходуСоСкладов очищен! Количество записей = " + СчетчикКоличестваСтрок);

КонецПроцедуры
